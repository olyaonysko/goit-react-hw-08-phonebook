{"version":3,"sources":["../node_modules/@material-ui/icons/VpnKey.js","pages/LoginPage/LoginPage.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","LoginView","dispatch","useDispatch","classes","useForm","handleSubmit","reset","control","Container","component","maxWidth","className","onSubmit","email","password","authOperations","logIn","CssBaseline","Avatar","Typography","variant","Grid","container","item","xs","name","defaultValue","render","onChange","TextField","fullWidth","id","label","autoComplete","required","type","Button","color"],"mappings":"gJAEA,IAAIA,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,MAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,iKACD,UAEJN,EAAQE,QAAUE,G,8MCNZG,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASa,IACtB,IAAMC,EAAWC,cACXC,EAAUrB,IAFkB,EAGOsB,cAAjCC,EAH0B,EAG1BA,aAAcC,EAHY,EAGZA,MAAOC,EAHK,EAGLA,QAO7B,OACE,cAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,SACE,uBAAMC,UAAWR,EAAQN,KAAMe,SAAUP,GAP5B,SAAC,GAAyB,IAAvBQ,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzBb,EAASc,IAAeC,MAAM,CAAEH,QAAOC,cACvCR,OAKE,UACE,cAACW,EAAA,EAAD,IACA,sBAAKN,UAAWR,EAAQlB,MAAxB,UACE,cAACiC,EAAA,EAAD,CAAQP,UAAWR,EAAQZ,OAA3B,SACE,cAAC,IAAD,MAEF,cAAC4B,EAAA,EAAD,CAAYV,UAAU,KAAKW,QAAQ,KAAnC,mBAGA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACnC,QAAS,EAAzB,UACE,cAACkC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEC,KAAK,QACLlB,QAASA,EACTmB,aAAa,GACbC,OAAQ,gBAAGC,EAAH,EAAGA,SAAUpD,EAAb,EAAaA,MAAb,OACN,cAACqD,EAAA,EAAD,CACED,SAAUA,EACVpD,MAAOA,EACP4C,QAAQ,WACRU,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNP,KAAK,QACLQ,aAAa,QACbC,UAAQ,SAKhB,cAACb,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CACEC,KAAK,WACLlB,QAASA,EACTmB,aAAa,GACbC,OAAQ,gBAAGC,EAAH,EAAGA,SAAUpD,EAAb,EAAaA,MAAb,OACN,cAACqD,EAAA,EAAD,CACED,SAAUA,EACVpD,MAAOA,EACP4C,QAAQ,WACRU,WAAS,EACTL,KAAK,WACLO,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHE,aAAa,mBACbC,UAAQ,YAOlB,cAACE,EAAA,EAAD,CACED,KAAK,SACLL,WAAS,EACTV,QAAQ,YACRiB,MAAM,YACN1B,UAAWR,EAAQJ,OALrB","file":"static/js/LoginPage.893f78d8.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.65 10C11.83 7.67 9.61 6 7 6c-3.31 0-6 2.69-6 6s2.69 6 6 6c2.61 0 4.83-1.67 5.65-4H17v4h4v-4h2v-4H12.65zM7 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}), 'VpnKey');\n\nexports.default = _default;","import { useForm, Controller } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from 'redux/auth';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const { handleSubmit, reset, control } = useForm();\r\n\r\n  const onSubmit = ({ email, password }) => {\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <VpnKeyIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Login\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Controller\r\n                name=\"email\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n                render={({ onChange, value }) => (\r\n                  <TextField\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    required\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Controller\r\n                name=\"password\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n                render={({ onChange, value }) => (\r\n                  <TextField\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    required\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}