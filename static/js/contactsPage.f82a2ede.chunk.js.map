{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/ContactsPage/ContactsPage.js"],"names":["module","exports","getContacts","dispatch","a","fetchContactsRequest","fetchContacts","data","fetchContactsSuccess","fetchContactsError","addContact","contact","addContactRequest","fetchAddContact","addContactSuccess","addContactError","deleteContact","id","deleteContactRequest","fetchDeleteContact","deleteContactSuccess","deleteContactError","editContact","item","editContactRequest","fetchEditContact","console","log","editContactSuccess","editContactError","message","state","contacts","getFilter","filter","getIsLoading","isLoading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","getContactEdit","edit","ContactForm","useDispatch","useSelector","contactsSelectors","contactEdit","useForm","register","handleSubmit","errors","reset","control","setValue","useEffect","number","onSubmit","contactsActions","addContactEdit","contactsOperations","find","toast","info","className","s","label","type","ref","minLength","value","maxLength","required","input","placeholder","as","InputMask","rules","defaultValue","mask","Button","variant","color","ContactList","visibleContacts","length","list","map","listItem","button","IconButton","edge","aria-label","onClick","Filter","onChange","event","changeFilter","target","ContactsPage"],"mappings":"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","file":"static/js/contactsPage.f82a2ede.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__86UJW\",\"label\":\"ContactForm_label__30rzo\",\"input\":\"ContactForm_input__2mcNb\",\"button\":\"ContactForm_button__1SWMg ContactForm_input__2mcNb\",\"errors\":\"ContactForm_errors__12c83\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Ag69\",\"listItem\":\"ContactList_listItem__jRzhx\",\"button\":\"ContactList_button__nFs2n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1wtry\",\"input\":\"Filter_input__1pcw2\"};","import {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  editContactRequest,\r\n  editContactSuccess,\r\n  editContactError,\r\n} from './contacts-action';\r\n\r\nimport {\r\n  fetchContacts,\r\n  fetchAddContact,\r\n  fetchDeleteContact,\r\n  fetchEditContact,\r\n} from 'services/phonebookApi';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await fetchContacts();\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await fetchAddContact(contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await fetchDeleteContact(id);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nexport const editContact = item => async dispatch => {\r\n  dispatch(editContactRequest());\r\n\r\n  try {\r\n    const { data } = await fetchEditContact(item);\r\n    console.log(data);\r\n    dispatch(editContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(editContactError(error.message));\r\n    console.log(error);\r\n  }\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.contacts;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getIsLoading = state => state.contacts.isLoading;\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport const getContactEdit = state => state.contacts.edit;\r\n","// import PhoneInput from 'react-phone-input-2';\r\n// import 'react-phone-input-2/lib/style.css';\r\n// import PhoneInputWithCountry from 'react-phone-number-input/react-hook-form-core';\r\n\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  contactsOperations,\r\n  contactsSelectors,\r\n  contactsActions,\r\n} from 'redux/contacts';\r\nimport InputMask from 'react-input-mask';\r\nimport 'react-phone-number-input/style.css';\r\nimport { toast } from 'react-toastify';\r\nimport s from './ContactForm.module.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const contactEdit = useSelector(contactsSelectors.getContactEdit);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    reset,\r\n    control,\r\n    setValue,\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (contactEdit) {\r\n      setValue('name', contactEdit.name);\r\n      setValue('number', contactEdit.number);\r\n    }\r\n  }, [contactEdit, setValue]);\r\n\r\n  const onSumbit = contact => {\r\n    if (contactEdit) {\r\n      const editContact = {\r\n        ...contact,\r\n        id: contactEdit.id,\r\n      };\r\n      reset();\r\n      dispatch(contactsActions.addContactEdit(null));\r\n      dispatch(contactsOperations.editContact(editContact));\r\n\r\n      return;\r\n    }\r\n\r\n    if (\r\n      contacts.find(\r\n        item => item.name.toLowerCase() === contact.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      toast.info(`ğŸ™„ ${contact.name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    if (contacts.find(item => item.number === contact.number)) {\r\n      toast.info('This number is already in contacts!');\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContact(contact));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSumbit)}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          ref={register({\r\n            minLength: { value: 2, message: 'Too short name' },\r\n            maxLength: { value: 20, message: 'Too long name' },\r\n            required: 'Is a required field',\r\n          })}\r\n          className={s.input}\r\n          placeholder=\"Enter name\"\r\n        />\r\n        {errors.name && <p className={s.errors}>{errors.name.message}</p>}\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <Controller\r\n          as={InputMask}\r\n          name=\"number\"\r\n          rules={{\r\n            required: 'Phone number is required',\r\n          }}\r\n          defaultValue=\"\"\r\n          control={control}\r\n          className={s.input}\r\n          placeholder=\"+38 (___) ___-__-__\"\r\n          mask=\"+38 (999) 999-99-99\"\r\n        />\r\n        {errors.number && <p className={s.errors}>{errors.number.message}</p>}\r\n      </label>\r\n\r\n      <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n        {contactEdit ? 'Edit' : 'Add contact'}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// <Container component=\"main\" maxWidth=\"xs\">\r\n//     <form onSubmit={handleSubmit(onSumbit)}>\r\n//       <label className={s.label}>\r\n//         Name\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"name\"\r\n//           ref={register({\r\n//             minLength: { value: 2, message: 'Too short name' },\r\n//             maxLength: { value: 20, message: 'Too long name' },\r\n//             required: 'Is a required field',\r\n//           })}\r\n//           className={s.input}\r\n//           placeholder=\"Enter name\"\r\n//         />\r\n//         {errors.name && <p className={s.errors}>{errors.name.message}</p>}\r\n//       </label>\r\n//       <label className={s.label}>\r\n//         Number\r\n//         <Controller\r\n// as={InputMask}\r\n// name=\"number\"\r\n// rules={{\r\n//   required: 'Phone number is required',\r\n// }}\r\n// defaultValue=\"\"\r\n// control={control}\r\n// className={s.input}\r\n// placeholder=\"+38 (___) ___-__-__\"\r\n// mask=\"+38 (999) 999-99-99\"\r\n//         />\r\n//         {errors.number && <p className={s.errors}>{errors.number.message}</p>}\r\n//       </label>\r\n\r\n//       <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n//         Sign Up\r\n//       </Button>\r\n//     </form>\r\n//   </Container>\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {\r\n  contactsOperations,\r\n  contactsSelectors,\r\n  contactsActions,\r\n} from 'redux/contacts';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      {contacts.length > 0 ? (\r\n        <ul className={s.list}>\r\n          {visibleContacts.map(contact => (\r\n            <li key={contact.id} className={s.listItem}>\r\n              <p>\r\n                {contact.name}: {contact.number}\r\n              </p>\r\n              <div className={s.button}>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"delete\"\r\n                  onClick={() =>\r\n                    dispatch(contactsOperations.deleteContact(contact.id))\r\n                  }\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"delete\"\r\n                  onClick={() =>\r\n                    dispatch(contactsActions.addContactEdit(contact))\r\n                  }\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Your phonebook is empty. Add contact.</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  filteredContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n\r\n/* <button\r\n                type=\"button\"\r\n                className={s.button}\r\n                onClick={() =>\r\n                  dispatch(contactsOperations.deleteContact(contact.id))\r\n                }\r\n              >\r\n                <Avatar className={classes.avatar}>\r\n                  <DeleteIcon />\r\n                </Avatar>\r\n                Delete\r\n              </button> */\r\n\r\n/* <button\r\n                type=\"button\"\r\n                className={s.button}\r\n                onClick={() =>\r\n                  dispatch(contactsActions.addContactEdit(contact))\r\n                }\r\n              >\r\n                Edit\r\n              </button> */\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsActions, contactsSelectors } from 'redux/contacts';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(contactsSelectors.getFilter);\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      {contacts.length > 1 && (\r\n        <label className={s.label}>\r\n          Find contacts by name\r\n          <input\r\n            type=\"text\"\r\n            className={s.input}\r\n            placeholder=\"Enter name\"\r\n            value={filter}\r\n            onChange={event =>\r\n              dispatch(contactsActions.changeFilter(event.target.value))\r\n            }\r\n          />\r\n        </label>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport ContactForm from 'components/ContactForm';\r\nimport ContactList from 'components/ContactList';\r\nimport Filter from 'components/Filter';\r\nimport { contactsOperations } from 'redux/contacts';\r\n\r\nexport default function ContactsPage() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(contactsOperations.getContacts()), [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}